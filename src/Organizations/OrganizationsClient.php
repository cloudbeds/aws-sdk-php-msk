<?php
namespace CloudBeds\Aws\MskFork\Organizations;

use CloudBeds\Aws\MskFork\AwsClient;

/**
 * This client is used to interact with the **AWS Organizations** service.
 * @method \CloudBeds\Aws\MskFork\Result acceptHandshake(array $args = [])
 * @method \GuzzleHttp\Promise\Promise acceptHandshakeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result attachPolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise attachPolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result cancelHandshake(array $args = [])
 * @method \GuzzleHttp\Promise\Promise cancelHandshakeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result closeAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise closeAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createGovCloudAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createGovCloudAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createOrganizationalUnit(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createOrganizationalUnitAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createPolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createPolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result declineHandshake(array $args = [])
 * @method \GuzzleHttp\Promise\Promise declineHandshakeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteOrganizationalUnit(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteOrganizationalUnitAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deletePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deletePolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteResourcePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteResourcePolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deregisterDelegatedAdministrator(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deregisterDelegatedAdministratorAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeCreateAccountStatus(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeCreateAccountStatusAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeEffectivePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeEffectivePolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeHandshake(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeHandshakeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeOrganizationalUnit(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeOrganizationalUnitAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describePolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result describeResourcePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise describeResourcePolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result detachPolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise detachPolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result disableAWSServiceAccess(array $args = [])
 * @method \GuzzleHttp\Promise\Promise disableAWSServiceAccessAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result disablePolicyType(array $args = [])
 * @method \GuzzleHttp\Promise\Promise disablePolicyTypeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result enableAWSServiceAccess(array $args = [])
 * @method \GuzzleHttp\Promise\Promise enableAWSServiceAccessAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result enableAllFeatures(array $args = [])
 * @method \GuzzleHttp\Promise\Promise enableAllFeaturesAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result enablePolicyType(array $args = [])
 * @method \GuzzleHttp\Promise\Promise enablePolicyTypeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result inviteAccountToOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise inviteAccountToOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result leaveOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise leaveOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listAWSServiceAccessForOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listAWSServiceAccessForOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listAccounts(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listAccountsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listAccountsForParent(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listAccountsForParentAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listChildren(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listChildrenAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listCreateAccountStatus(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listCreateAccountStatusAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listDelegatedAdministrators(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listDelegatedAdministratorsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listDelegatedServicesForAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listDelegatedServicesForAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listHandshakesForAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listHandshakesForAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listHandshakesForOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listHandshakesForOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listOrganizationalUnitsForParent(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listOrganizationalUnitsForParentAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listParents(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listParentsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listPolicies(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listPoliciesAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listPoliciesForTarget(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listPoliciesForTargetAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listRoots(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listRootsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listTagsForResource(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listTargetsForPolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listTargetsForPolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result moveAccount(array $args = [])
 * @method \GuzzleHttp\Promise\Promise moveAccountAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result putResourcePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise putResourcePolicyAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result registerDelegatedAdministrator(array $args = [])
 * @method \GuzzleHttp\Promise\Promise registerDelegatedAdministratorAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result removeAccountFromOrganization(array $args = [])
 * @method \GuzzleHttp\Promise\Promise removeAccountFromOrganizationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result tagResource(array $args = [])
 * @method \GuzzleHttp\Promise\Promise tagResourceAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result untagResource(array $args = [])
 * @method \GuzzleHttp\Promise\Promise untagResourceAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateOrganizationalUnit(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateOrganizationalUnitAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updatePolicy(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updatePolicyAsync(array $args = [])
 */
class OrganizationsClient extends AwsClient {}
