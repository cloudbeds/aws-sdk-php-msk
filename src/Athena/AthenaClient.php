<?php
namespace CloudBeds\Aws\MskFork\Athena;

use CloudBeds\Aws\MskFork\AwsClient;

/**
 * This client is used to interact with the **Amazon Athena** service.
 * @method \CloudBeds\Aws\MskFork\Result batchGetNamedQuery(array $args = [])
 * @method \GuzzleHttp\Promise\Promise batchGetNamedQueryAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result batchGetPreparedStatement(array $args = [])
 * @method \GuzzleHttp\Promise\Promise batchGetPreparedStatementAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result batchGetQueryExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise batchGetQueryExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result cancelCapacityReservation(array $args = [])
 * @method \GuzzleHttp\Promise\Promise cancelCapacityReservationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createCapacityReservation(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createCapacityReservationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createDataCatalog(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createDataCatalogAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createNamedQuery(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createNamedQueryAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createNotebook(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createNotebookAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createPreparedStatement(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createPreparedStatementAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createPresignedNotebookUrl(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createPresignedNotebookUrlAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result createWorkGroup(array $args = [])
 * @method \GuzzleHttp\Promise\Promise createWorkGroupAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteCapacityReservation(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteCapacityReservationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteDataCatalog(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteDataCatalogAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteNamedQuery(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteNamedQueryAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteNotebook(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteNotebookAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deletePreparedStatement(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deletePreparedStatementAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result deleteWorkGroup(array $args = [])
 * @method \GuzzleHttp\Promise\Promise deleteWorkGroupAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result exportNotebook(array $args = [])
 * @method \GuzzleHttp\Promise\Promise exportNotebookAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getCalculationExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getCalculationExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getCalculationExecutionCode(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getCalculationExecutionCodeAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getCalculationExecutionStatus(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getCalculationExecutionStatusAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getCapacityAssignmentConfiguration(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getCapacityAssignmentConfigurationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getCapacityReservation(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getCapacityReservationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getDataCatalog(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getDataCatalogAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getDatabase(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getDatabaseAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getNamedQuery(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getNamedQueryAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getNotebookMetadata(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getNotebookMetadataAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getPreparedStatement(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getPreparedStatementAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getQueryExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getQueryExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getQueryResults(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getQueryResultsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getQueryRuntimeStatistics(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getQueryRuntimeStatisticsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getSession(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getSessionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getSessionStatus(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getSessionStatusAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getTableMetadata(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getTableMetadataAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result getWorkGroup(array $args = [])
 * @method \GuzzleHttp\Promise\Promise getWorkGroupAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result importNotebook(array $args = [])
 * @method \GuzzleHttp\Promise\Promise importNotebookAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listApplicationDPUSizes(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listApplicationDPUSizesAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listCalculationExecutions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listCalculationExecutionsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listCapacityReservations(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listCapacityReservationsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listDataCatalogs(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listDataCatalogsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listDatabases(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listDatabasesAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listEngineVersions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listEngineVersionsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listExecutors(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listExecutorsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listNamedQueries(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listNamedQueriesAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listNotebookMetadata(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listNotebookMetadataAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listNotebookSessions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listNotebookSessionsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listPreparedStatements(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listPreparedStatementsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listQueryExecutions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listQueryExecutionsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listSessions(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listSessionsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listTableMetadata(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listTableMetadataAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listTagsForResource(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result listWorkGroups(array $args = [])
 * @method \GuzzleHttp\Promise\Promise listWorkGroupsAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result putCapacityAssignmentConfiguration(array $args = [])
 * @method \GuzzleHttp\Promise\Promise putCapacityAssignmentConfigurationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result startCalculationExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise startCalculationExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result startQueryExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise startQueryExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result startSession(array $args = [])
 * @method \GuzzleHttp\Promise\Promise startSessionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result stopCalculationExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise stopCalculationExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result stopQueryExecution(array $args = [])
 * @method \GuzzleHttp\Promise\Promise stopQueryExecutionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result tagResource(array $args = [])
 * @method \GuzzleHttp\Promise\Promise tagResourceAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result terminateSession(array $args = [])
 * @method \GuzzleHttp\Promise\Promise terminateSessionAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result untagResource(array $args = [])
 * @method \GuzzleHttp\Promise\Promise untagResourceAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateCapacityReservation(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateCapacityReservationAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateDataCatalog(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateDataCatalogAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateNamedQuery(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateNamedQueryAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateNotebook(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateNotebookAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateNotebookMetadata(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateNotebookMetadataAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updatePreparedStatement(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updatePreparedStatementAsync(array $args = [])
 * @method \CloudBeds\Aws\MskFork\Result updateWorkGroup(array $args = [])
 * @method \GuzzleHttp\Promise\Promise updateWorkGroupAsync(array $args = [])
 */
class AthenaClient extends AwsClient {}
